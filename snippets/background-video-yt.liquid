{% liquid
  if video contains 'youtube.com/watch'
    assign video_type = 'youtube'
    assign video_id = video | split: 'v='
    assign video_id = video_id[1] | split: '&' | first
  endif
  if video contains 'youtu.be/'
    assign video_type = 'youtube'
    assign video_id = video | split: '.be/'
    assign video_id = video_id[1] | split: '&' | first
  endif
  if video contains 'mp4'
    assign video_type = 'mp4'
  endif
%}

{% unless request.design_mode %}
  <script
    src="{{ 'modules-background-video-yt.bundle.min.js' | asset_url }}"
    type="module"
  ></script>
{% endunless %}
{{ 'background-video-yt.css' | asset_url | stylesheet_tag }}

{% if fallback_image %}
  {% capture fallback_image_tag %}
    {{ fallback_image | image_url: width: 2000 | image_tag: class: 'block absolute inset-0 w-full h-full object-cover', sizes: '100vw', loading: 'lazy' }}
  {% endcapture %}
{% endif %}

<div
  class="background-video absolute inset-0 w-full h-full overflow-hidden{% if media_wrapper_class %} {{ media_wrapper_class }}{% endif %}"
  id="{{ component_id }}"
  x-data="
    ThemeModule_BackgroundVideoYT(
      { videoType: '{{ video_type }}', videoId: '{{ video_id }}' }
    )
  "
>
  {% if video_type == 'youtube' %}
    {% if fallback_image_tag %}
      {{ fallback_image_tag }}
    {% endif %}
    <div id="player-{{ component_id }}"></div>
  {% elsif video_type == 'mp4' %}
    <video
      class="object-cover absolute inset-0 w-full h-full"
      autoplay
      muted
      loop
      muted
      playsinline
    >
      {% comment %}theme-check-disable RemoteAsset{% endcomment %}
      <source src="{{ video }}" type="video/mp4">
      {% comment %}theme-check-enable RemoteAsset{% endcomment %}
      {% if fallback_image_tag %}
        {{ fallback_image_tag }}
      {% endif %}
      Sorry, your browser doesn't support embedded videos.
    </video>
  {% endif %}
</div>
